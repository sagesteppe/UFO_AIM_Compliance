pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_remove(Variable, "^*\\.")) %>%
pivot_wider()
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_remove(!Variable, "\\.[^.]*$")) %>%
pivot_wider()
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_remove(Variable, "\\.[^.]*$", negate = T)) %>%
pivot_wider()
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_remove(Variable, "\\.[^.]*$", negate = T)) #%>%
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_subset(Variable, "\\.[^.]*$", negate = T)) #%>%
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_textractVariable, "\\.[^.]*$", negate = T)) #%>%
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_textract(Variable, "\\.[^.]*$")) #%>%
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) #%>%
pivot_wider(names_from = Variable, values_from = Statistic)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ tosentence(gsub(".", " ", .x, fixed = TRUE)))
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE))
knitr::kable(digits = 1) %>%
collapse_rows(columns = 1, valign = "top")
knitr::kable(digits = 1) %>%
collapse_rows(columns = 1, valign = "top")
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
knitr::kable(digits = 1) %>%
collapse_rows(columns = 1, valign = "top")
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
knitr::kable(digits = 1) %>%
kableExtra::collapse_rows(columns = 1, valign = "top")
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
knitr::kable(digits = 1) #%>%
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
fct_relevel(Group, "Protected", "All", "Unprotected")
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))
AIMdata %>%
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected")))
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename('Ecological Site' = Actual.Eco.Site) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
arrange(layer)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename('Ecological Site' = Actual.Eco.Site) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
arrange(Group)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
rename('Ecological Site' = 'Actual Eco Site') %>%
arrange(Group)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
rename('Ecological Site' = 'Actual Eco Site') %>%
group_by('Ecological Site') %>%
arrange(Group)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
rename(Ecological_Site = 'Actual Eco Site') %>%
group_by(Ecological_Site) %>%
arrange(Group)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
rename(Ecological_Site = 'Actual Eco Site') %>%
group_by(Ecological_Site) %>%
arrange(Ecological_Site, Group)
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ gsub(".", " ", .x, fixed = TRUE)) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
rename(Ecological_Site = 'Actual Eco Site') %>%
group_by(Ecological_Site) %>%
arrange(Ecological_Site, Group) %>%
knitr::kable(digits = 1) #%>%
AIMdata %>%
select(., c(Actual.Eco.Site , matches("SoilStability"))) %>%
group_by(Actual.Eco.Site) %>%
mutate(across(matches("SoilStability"), # Get stats for these columns
list(min = min, median = median, mean = mean, max = max, sd = sd),
na.rm = T,
.names = "{.col}.{.fn}"
)) %>% # we may want to calculate MODE in here - need defined and troubleshoot
mutate(across(matches("sd"),
~ .x * 1.282)) %>%
rename_with(~gsub('sd', 'Z-score', .x)) %>% # ask ken if he wants 2 SD or why the conversion is carried out
distinct(Actual.Eco.Site, .keep_all = T) %>%
dplyr::select(-SoilStability_All, -SoilStability_Protected, -SoilStability_Unprotected) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'Variable', values_to = 'Statistic') %>%
mutate(Variable = str_remove(Variable, 'SoilStability_')) %>%
mutate(Group = str_remove(Variable, "\\.[^.]*$"), .before = Variable) %>%
mutate(Variable = str_extract(Variable, "\\.[^.]*$")) %>%
pivot_wider(names_from = Variable, values_from = Statistic) %>%
rename_with(., ~ str_to_title(gsub(".", " ", .x, fixed = TRUE))) %>%
mutate(Group = forcats::fct_relevel(Group, c("Protected", "All", "Unprotected"))) %>%
rename(Ecological_Site = 'Actual Eco Site') %>%
group_by(Ecological_Site) %>%
arrange(Ecological_Site, Group) %>%
knitr::kable(digits = 1) #%>%
AIMdata1<-AIMdata %>%
select(BareSoilCover, AH_ForbCover, AH_GrassCover, FH_TotalLitterCover, FH_RockCover, shrub.subshrub, succulent, tree, TotalFoliarCover, Actual.Eco.Site)
AIMdata <- AIMdata %>%
mutate('Shrub_Cover'   = rowSums(select(., matches("AH.*ShrubCover")), na.rm = T), # subshrub need to ask Ken I have like 12 columns to taylors 4 ???
'Succulent'     = rowSums(select(., matches("AH.*SucculentCover")), na.rm = T),
'Tree'          = rowSums(select(., matches("AH.*TreeCover")), na.rm = T),
'noxiousforb'   = rowSums(select(., matches("AH_Nox.*ForbCover")), na.rm = T),
'nonnoxiousforb'= rowSums(select(., matches("AH_NonNox.*ForbCover")), na.rm = T)
) %>%
group_by(Actual.Eco.Site) %>% # calculate the sample size for each stratum
mutate('StratumSampleSize' = n()) # by group here
AIMdata1<-AIMdata %>%
select(BareSoilCover, AH_ForbCover, AH_GrassCover, FH_TotalLitterCover, FH_RockCover, shrub.subshrub, succulent, tree, TotalFoliarCover, Actual.Eco.Site)
View(AIMdata)
AIMdata1<-AIMdata %>%
select(BareSoilCover,AH_ForbCover,AH_GrassCover, FH_TotalLitterCover,FH_RockCover,shrub.subshrub,Succulent,Tree,TotalFoliarCover,Actual.Eco.Site)
View(AIMdata1)
AIMdata1<-AIMdata %>%
select(BareSoilCover, AH_ForbCover, AH_GrassCover, FH_TotalLitterCover,
FH_RockCover, shrub.subshrub, Succulent, Tree, TotalFoliarCover, Actual.Eco.Site) %>%
pivot_longer(!Actual.Eco.Site, names_to = 'covertype', values_to = 'covervalue')
View(AIMdata1)
